/* Metadata */

OBSThemeMeta {
    dark: 'true';
    author: 'Eternal Network';
}


/* Palette */

OBSTheme {
    /* Background */
    window: {window};
    base: {base};
    alternateBase: {alternate_base};
    button: {button};
    light: {light};
    mid: {mid};
    dark: {dark};

    /* Foreground */
    windowText: {window_text};
    text: {text};
    brightText: {bright_text};
    buttonText: {button_text};

    /* Highlight */
    highlight: {highlight};
    highlightedText: {highlighted_text};
    link: {link};
    linkVisited: {linkVisited};
}


/* Base style */

QWidget {
    color: palette(window-text);
    background-color: palette(window);
    alternate-background-color: palette(base);
    selection-color: palette(highlighted-text);
    selection-background-color: palette(highlight);
    border: none;
    outline: none;
    font-family: 'Open Sans', '.AppleSystemUIFont', Helvetica, 'Segoe UI', Arial, sans-serif;
    font-size: 10pt;
}


/* Buttons */

QPushButton {
    min-height: 18px;
    margin: 1px;
    padding: 4px 12px;
    color: palette(window-text);
    background-color: palette(button);
    border-radius: {border_radius};
}

QPushButton::flat {
    background-color: palette(base);
}

QPushButton:hover {
    background-color: palette(light);
}

QPushButton:pressed {
    background-color: palette(dark);
}

QPushButton:checked {
    background-color: palette(base);
}

QPushButton:disabled {
    background-color: palette(dark);
}

QPushButton::menu-indicator {
    width: 10%;
    image: url('./Dark/down.svg');
    subcontrol-position: right;
    subcontrol-origin: padding;
}

QPushButton[toolButton="true"],
QToolButton {
    margin: 1px;
    padding: 2px;
	background-color: transparent;
    border-radius: {border_radius};
}

QPushButton[toolButton="true"]:last-child,
QToolButton:last-child {
    margin-right: 0;
}

QPushButton[toolButton="true"]:hover,
QToolButton:hover {
    background-color: palette(light);
}

QPushButton[toolButton="true"]:pressed,
QToolButton:pressed {
    background-color: palette(dark);
}

QPushButton[toolButton="true"]::disabled,
QToolButton::disabled {
    background-color: transparent;
}


/* ComboBox */

QDateTimeEdit,
QComboBox {
    padding: 2px 2px 2px 8px;
    background-color: palette(button);
    border-radius: {border_radius};
}

QDateTimeEdit:hover,
QComboBox:hover {
    background-color: palette(light);
}

QDateTimeEdit::drop-down,
QComboBox::drop-down {
    width: 20px;
    border: none;
}

QDateTimeEdit::down-arrow,
QComboBox::down-arrow {
    width: 10%;
    qproperty-alignment: AlignTop;
    image: url('./Dark/down.svg');
}

QDateTimeEdit:on,
QComboBox:on {
    background-color: palette(base);
}


/* SpinBox */

QSpinBox,
QDoubleSpinBox {
    padding: 4px;
    background-color: palette(base);
    border-radius: {border_radius};
}

QSpinBox::up-button,
QDoubleSpinBox::up-button {
    subcontrol-origin: margin;
    subcontrol-position: top right;
    background-color: palette(button);
    border: none;
    border-radius: {border_radius};
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
}

QSpinBox::down-button,
QDoubleSpinBox::down-button {
    subcontrol-origin: margin;
    subcontrol-position: bottom right;
    background-color: palette(button);
    border: none;
    border-radius: {border_radius};
    border-top-right-radius: 0;
    border-top-left-radius: 0;
}

QSpinBox::up-button:hover,
QSpinBox::down-button:hover,
QDoubleSpinBox::up-button:hover,
QDoubleSpinBox::down-button:hover {
    background-color: palette(light);
}

QSpinBox::up-button:pressed,
QSpinBox::down-button:pressed,
QDoubleSpinBox::up-button:pressed,
QDoubleSpinBox::down-button:pressed {
    background-color: palette(dark);
}

QSpinBox::up-button:disabled,
QSpinBox::up-button:off,
QSpinBox::down-button:disabled,
QSpinBox::down-button:off,
QDoubleSpinBox::up-button:disabled,
QDoubleSpinBox::up-button:off,
QDoubleSpinBox::down-button:disabled,
QDoubleSpinBox::down-button:off {
    background-color: palette(window);
}

QSpinBox::up-arrow,
QDoubleSpinBox::up-arrow {
    width: 10%;
    image: url('./Dark/up.svg');
}

QSpinBox::down-arrow,
QDoubleSpinBox::down-arrow {
    width: 10%;
    image: url('./Dark/down.svg');
}


/* TextEdit */

QLineEdit,
QTextEdit,
QPlainTextEdit {
    padding: 4px;
    background-color: palette(base);
    border-radius: {border_radius};
}


/* Group Box */

QGroupBox {
    padding-top: 26px;
    border: 1px solid palette(base);
    border-radius: {border_radius};
    font-weight: bold;
}

QGroupBox::title {
    top: 6px;
    left: 8px;
    subcontrol-origin: margin;
}


/* Tab widget */

QTabWidget::pane {
    border-top: 1px solid palette(base);
}

QTabWidget::tab-bar {
    alignment: left;
}

QTabBar::tab {
    min-width: 24px;
    margin: 1px;
    padding: 4px 8px;
    background-color: palette(button);
}

QTabBar::tab:top {
    border-bottom: 1px transparent;
    border-top-left-radius: {border_radius};
    border-top-right-radius: {border_radius};
}

QTabBar::tab:bottom {
    height: 14px;
    border-bottom-left-radius: {border_radius};
    border-bottom-right-radius: {border_radius};
}

QTabBar::tab:hover {
    background-color: palette(light);
}

QTabBar::tab:pressed {
    background-color: palette(base);
}

QTabBar::tab:selected {
    background-color: palette(base);
}


/* Dock Widget */

QDockWidget {
	titlebar-close-icon: url('./Dark/close.svg');
	titlebar-normal-icon: url('./Dark/popout.svg');
}

QDockWidget::title {
    background-color: palette(dark);
    text-align: center;
}

QDockWidget::close-button,
QDockWidget::float-button {
    padding: 0;
    background-color: transparent;
    border: none;
}

QDockWidget::close-button:hover,
QDockWidget::float-button:hover {
    background-color: transparent;
}

QDockWidget::close-button:pressed,
QDockWidget::float-button:pressed {
    padding: 1px -1px -1px 1px;
}


/* Table View */

QTableView {
    gridline-color: palette(dark);
}

QHeaderView::section {
    color: palette(window-text);
    background-color: palette(dark);
    border: 1px solid palette(base);
    border-radius: {border_radius};
}


/* Sliders */

QSlider::handle:horizontal,
QSlider::handle:vertical {
    width: 12px;
    height: 12px;
    background-color: {slider_handle};
    border: none;
    border-radius: 6px;
}

QSlider::handle:horizontal {
    margin: -5px 0;
}

QSlider::handle:vertical {
    margin: 0 -5px;
}

QSlider::handle:horizontal:disabled,
QSlider::handle:vertical:disabled {
    background-color: {slider_handle_disabled};
}

QSlider::groove:horizontal {
    height: 2px;
    background-color: palette(dark);
    border: none;
}

QSlider::groove:vertical {
    width: 2px;
    background-color: palette(dark);
    border: none;
}

QSlider::sub-page:horizontal,
QSlider::add-page:vertical {
    background-color: {slider_groove_fill};
}

QSlider::sub-page:horizontal:disabled,
QSlider::add-page:vertical:disabled {
    background-color: {slider_groove_fill_disabled};
}


/* Scrollbars */

::corner {
    background-color: transparent;
    border: none;
}

QScrollBar {
    margin: 0;
    background-color: transparent;
}

QScrollBar::handle {
    margin: 2px;
    background-color: palette(button);
    border-radius: 4px;
}

QScrollBar::handle:hover {
    background-color: palette(light);
}

QScrollBar::handle:pressed {
    background-color: palette(dark);
}

QScrollBar:vertical {
    width: 12px;
}

QScrollBar::handle:vertical {
    min-height: 16px;
}

QScrollBar::add-line:vertical,
QScrollBar::sub-line:vertical {
    height: 0px;
    background: none;
    border: none;
}

QScrollBar::up-arrow:vertical,
QScrollBar::down-arrow:vertical,
QScrollBar::add-page:vertical,
QScrollBar::sub-page:vertical {
    background: none;
    color: none;
    border: none;
}

QScrollBar:horizontal {
    height: 12px;
}

QScrollBar::handle:horizontal {
    min-width: 16px;
}

QScrollBar::add-line:horizontal,
QScrollBar::sub-line:horizontal {
    width: 0px;
    background: none;
    border: none;
}

QScrollBar::left-arrow:horizontal,
QScrollBar::right-arrow:horizontal,
QScrollBar::add-page:horizontal,
QScrollBar::sub-page:horizontal {
    background: none;
    color: none;
    border: none;
}


/* Status bar */

QStatusBar::item {
    border: none;
}


/* Toolbars */

QToolBar {
    background-color: palette(window);
}

* [themeID="addIconSmall"] {
    qproperty-icon: url('./Dark/plus.svg');
}

* [themeID="removeIconSmall"] {
    qproperty-icon: url('./Dark/minus.svg');
}

* [themeID="clearIconSmall"] {
    qproperty-icon: url('./Dark/entry-clear.svg');
}

* [themeID="propertiesIconSmall"] {
    qproperty-icon: url('./Dark/settings/general.svg');
}

* [themeID="configIconSmall"] {
    qproperty-icon: url('./Dark/settings/general.svg');
}

* [themeID="refreshIconSmall"] {
    qproperty-icon: url('./Dark/refresh.svg');
}

* [themeID="upArrowIconSmall"] {
    qproperty-icon: url('./Dark/up.svg');
}

* [themeID="downArrowIconSmall"] {
    qproperty-icon: url('./Dark/down.svg');
}

* [themeID="pauseIconSmall"] {
    qproperty-icon: url('./Dark/media-pause.svg');
}

* [themeID="menuIconSmall"] {
    qproperty-icon: url('./Dark/dots-vert.svg');
}

* [themeID="cogsIcon"] {
    qproperty-icon: url('./Dark/cogs.svg');
}


/* Scene tree */

SceneTree {
    qproperty-gridItemWidth: 150;
	qproperty-gridItemHeight: 26;
}

*[gridMode="true"] SceneTree::item {
	margin: 1px;
    padding: 4px 8px;
    color: palette(window-text);
    background-color: palette(dark);
    border-radius: {border_radius};
}

*[gridMode="true"] SceneTree::item:hover {
    background-color: palette(light);
}

*[gridMode="true"] SceneTree::item:pressed {
    background-color: palette(light);
}

*[gridMode="true"] SceneTree::item:selected {
    background-color: palette(button);
}

*[gridMode="true"] SceneTree::item:checked {
    background-color: palette(button);
}


/* Controls Dock */

#controlsDock QPushButton {
    margin: 0px;
    padding: 4px 6px;
}


/* Source context */

#contextContainer QPushButton {
    padding: 4px 10px;
}

#contextContainer QPushButton[themeID2=contextBarButton] {
    padding: 4px 6px;
}

#contextContainer QPushButton#sourcePropertiesButton {
    qproperty-icon: url('./Dark/settings/general.svg');
}

#contextContainer QPushButton#sourceFiltersButton {
    qproperty-icon: url('./Dark/filter.svg');
}

#contextContainer QPushButton#sourceInteractButton {
    qproperty-icon: url('./Dark/interact.svg');
}


/* Preview */

OBSQTDisplay {
	qproperty-displayBackgroundColor: palette(mid);
}

* [themeID="previewProgramLabels"] {
    color: rgb(128, 128, 128);
    font-size: 16px;
    font-weight: bold;
}


/* Settings */

OBSBasicSettings {
    qproperty-generalIcon: url('./Dark/settings/general.svg');
    qproperty-streamIcon: url('./Dark/settings/stream.svg');
    qproperty-outputIcon: url('./Dark/settings/output.svg');
    qproperty-audioIcon: url('./Dark/settings/audio.svg');
    qproperty-videoIcon: url('./Dark/settings/video.svg');
    qproperty-hotkeysIcon: url('./Dark/settings/hotkeys.svg');
    qproperty-accessibilityIcon: url('./Dark/settings/accessibility.svg');
    qproperty-advancedIcon: url('./Dark/settings/advanced.svg');
}


/* Misc */

QAbstractItemView,
QStackedWidget#stackedMixerArea QWidget {
    background-color: palette(base);
}

QToolTip {
    color: palette(window-text);
    background-color: palette(base);
    border: none;
}

QMenuBar::item {
    background-color: palette(window);
}

QListView::item,
SourceTree::item {
    color: palette(window-text);
}

QListView::item:hover,
SourceTree::item:hover {
    background-color: palette(light);
}

QListView::item:selected,
SourceTree::item:selected {
    background-color: palette(button);
}

QListView::item:selected:hover,
SourceTree::item:selected:hover {
    background-color: palette(light);
}


/* macOS separator fix */

QMainWindow::separator {
    width: 4px;
    height: 4px;
    background: transparent;
}


/* Mute checkbox */

MuteCheckBox::indicator:checked {
    image: url('./Dark/mute.svg');
}

MuteCheckBox::indicator:unchecked {
    image: url('./Dark/settings/audio.svg');
}


/* Pause checkbox */

PauseCheckBox {
    outline: none;
}

PauseCheckBox::indicator:checked {
    image: url(':/res/images/media-pause.svg');
}

PauseCheckBox::indicator:unchecked {
    image: url(':/res/images/media-play.svg');
}


/* Group collapse checkbox */

SourceTreeSubItemCheckBox::indicator:checked {
    image: url('./Dark/expand.svg');
}

SourceTreeSubItemCheckBox::indicator:unchecked {
    image: url('./Dark/collapse.svg');
}


/* Locked checkbox */

LockedCheckBox::indicator:checked {
    image: url('./Dark/locked.svg');
}

LockedCheckBox::indicator:unchecked {
    image: url(':res/images/unlocked.svg');
}


/* Visibility checkbox */

VisibilityCheckBox::indicator:checked {
    image: url('./Dark/visible.svg');
}

VisibilityCheckBox::indicator:unchecked {
    image: url(':res/images/invisible.svg');
}

* [themeID="revertIcon"] {
    qproperty-icon: url('./Dark/revert.svg');
}


/* Source icons */

OBSBasic {
    qproperty-imageIcon: url('./Dark/sources/image.svg');
    qproperty-colorIcon: url('./Dark/sources/brush.svg');
    qproperty-slideshowIcon: url('./Dark/sources/slideshow.svg');
    qproperty-audioInputIcon: url('./Dark/sources/microphone.svg');
    qproperty-audioOutputIcon: url('./Dark/settings/audio.svg');
    qproperty-desktopCapIcon: url('./Dark/settings/video.svg');
    qproperty-windowCapIcon: url('./Dark/sources/window.svg');
    qproperty-gameCapIcon: url('./Dark/sources/gamepad.svg');
    qproperty-cameraIcon: url('./Dark/sources/camera.svg');
    qproperty-textIcon: url('./Dark/sources/text.svg');
    qproperty-mediaIcon: url('./Dark/sources/media.svg');
    qproperty-browserIcon: url('./Dark/sources/globe.svg');
    qproperty-groupIcon: url('./Dark/sources/group.svg');
    qproperty-sceneIcon: url('./Dark/sources/scene.svg');
    qproperty-defaultIcon: url('./Dark/sources/default.svg');
    qproperty-audioProcessOutputIcon: url('./Dark/sources/windowaudio.svg');
}


/* Missing files icon */

OBSMissingFiles {
	qproperty-warningIcon: url('./Dark/alert.svg');
}


/* Save icon */

* [themeID="replayIconSmall"] {
    qproperty-icon: url('./Dark/save.svg');
}


/* Media icons */

* [themeID="playIcon"] {
    qproperty-icon: url('./Dark/media/media_play.svg');
}

* [themeID="pauseIcon"] {
    qproperty-icon: url('./Dark/media/media_pause.svg');
}

* [themeID="restartIcon"] {
    qproperty-icon: url('./Dark/media/media_restart.svg');
}

* [themeID="stopIcon"] {
    qproperty-icon: url('./Dark/media/media_stop.svg');
}

* [themeID="nextIcon"] {
    qproperty-icon: url('./Dark/media/media_next.svg');
}

* [themeID="previousIcon"] {
    qproperty-icon: url('./Dark/media/media_previous.svg');
}
